import socket
import os 
import sys
import paramiko
import threading
import subprocess
#Our server sends commands NOT the client!!!!
host_key = paramiko.RSAKey(filename='test_rsa.key')
ServerIP = 'localhost'
ServerPort = 10000
ServerAddress =  (ServerIP, ServerPort)

class Server(paramiko.ServerInterface):
    def __init__(self):
        self.event = threading.Event()
    def check_channel_request(self, kind, chanid):
        if kind == 'session':
            return paramiko.OPEN_SUCCEEDED
        return paramiko.OPEN_FAILED_ADMINISTRATIVELY_PROHIBITED
    def check_auth_password(self, username, password):
        if (username == "roy") and (password == "sonicrush"):
            return paramiko.AUTH_SUCCESSFUL
        return paramiko.AUTH_FAILED

SSHSocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
SSHSocket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
SSHSocket.bind(ServerAddress)
SSHSocket.listen(100)

print("Waiting for a connection......")

while True:
    client, client_addr = SSHSocket.accept()
    
    if client:
        print('Connection Recieved, Authenticating.....', client_addr)
        Session = paramiko.Transport(client)
        Session.add_server_key(host_key)

        #Checking authentication starts here
        server = Server()

        Session.start_server(server=server)
        SessionHandler = Session.accept(20)
        print("Authenticated!")
        while True:
            print("Enter a command to send to ", client, " ", client_addr)
            cmd = input("Enter a command now: => ")
            
            if cmd == "file":
                
                #Prep the file for sending
                FileName = input("Enter the file name in the current directory to send: = > ")
                ReadFileData = open(FileName, 'rb')
                ReadFileBytes = ReadFileData.read(1024)
                while ReadFileBytes:
                    SessionHandler.sendall(ReadFileBytes)
                    ReadFileBytes = ReadFileData.read(1024)
                ReadFileData.close()

            else:
            
                data = str.encode(cmd)
                SessionHandler.send(data)
        




        

    
